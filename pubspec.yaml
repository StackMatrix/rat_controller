name: rat_controller
description: a reomte access tool for control device.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=2.19.1 <3.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  #### 框架和基础包
  get: ^4.6.5 # get 管理状态并注入依赖项的框架 【全平台支持】
  app_runner: ^2.1.2 #AppRunner 是一个配置器，用于快速和受控地启动应用程序 【全平台支持】
  flutter_screenutil: ^5.6.0 #一个适配屏幕和字体大小的 Flutter 插件 【全平台支持】
  intl: ^0.17.0 #提供国际化和本地化设施，包括消息翻译、复数和性别、日期/数字格式和解析以及双向文本 【全平台支持】

  #### 数据处理和存储包
  get_storage: ^2.0.3 #完全用 Dart 编写的快速、超轻且同步的键值存储插件 【全平台支持】
  json_annotation: ^4.8.0 #通过 json_serializable 包支持 JSON 代码生成的类和辅助函数 【全平台支持】
  json_serializable: ^6.5.4 #通过注释 Dart 类自动生成与 JSON 相互转换的包 【Linux、Mac、Windows】

  #### 网络请求包
  dio: ^4.0.6 #一个强大的 Dart Http 客户端，支持拦截器、全局配置、FormData、请求取消、文件下载、超时等 【全平台支持】

  #### 设备信息包
  device_info_plus: ^8.0.0 #从 Flutter 应用程序中获取当前设备信息 【全平台支持】
  connectivity_plus: ^3.0.2 #它可以区分蜂窝连接和 WiFi 连接 【全平台支持】
  permission_handler: ^10.2.0 # Flutter 的权限插件，用来请求和检查权限 【Android、IOS、Windows】
  android_id: ^0.1.3+1 #由于 device_info_plus 移除了androidId，使用此包可获取 【Android】
  amap_flutter_location: ^3.0.0 #高德定位 SDK Flutter插件 【Android、IOS】
  path: ^1.8.2 #基于字符串的路径操作库 【全平台支持】
  path_provider: ^2.0.11 #用于查找文件系统上常用位置的Flutter插件 【Android、IOS、Linux、Mac、Windows】

  #### 动画处理包
  lottie: ^2.0.0 # lottie 动画 【全平台支持】
  animate_do: ^3.0.2 #受 Animate.css 启发的动画包 【全平台支持】
  animated_text_kit: ^4.2.2 #文本动画包 【全平台支持】
  loading_animations: ^2.2.0 #一组简单但非常可定制的 Flutter 项目加载动画 【全平台支持】
  animated_splash_screen: ^1.3.0 #以完全可定制的方式创建动画启动画面的最简单方法 【全平台支持】
  flutter_shimmer: ^2.1.2 #用于创建指示加载状态的 Shimmer 效果 【全平台支持】

  #### 小部件包
  # flutter_side_menu: ^0.3.0 # 左右侧边栏
  pluto_layout: ^1.0.0 # 可以在每一侧配置一个菜单或标签屏幕

  #### PC 端的包
  desktop_window: ^0.4.0 # Flutter 桌面插件以获取和更改窗口大小 【Linux、Mac、Windows】
  bitsdojo_window: ^0.1.5 # Linux、mac 和 windows 的窗口标题栏，无边框 【Linux、Mac、Windows】
  desktop_multi_window: ^0.2.0 # Linux、mac 和 windows 添加多窗口 【Linux、Mac、Windows】

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2

dev_dependencies:
  flutter_test:
    sdk: flutter
  build_runner: ^2.3.2 #使用 Dart 代码生成文件和模块化编译的构建系统包 【Linux、Mac、Windows】
  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
